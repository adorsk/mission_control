import os
import tempfile
import shutil


class JobdirRunner(object):
    """Class for running Jobdirs generated by :class:`JobdirBuilder`"""
    def __init__(self, job_spec=None, job=None, cfg=None, run_jobdir_fn=None,
                 **kwargs):
        """
        Args:
            job_spec (dict): jobman job_spec dict.
            job (dict): mc job
            cfg (dict): cfg dict
            run_jobdir_fn (fn): a function that runs a jobdir.
                This fn is how users of this class can customize job run.
                See :meth:`_default_run_jobdir` for more info.
        """
        self.job_spec = job_spec
        self.job = job
        self.cfg = cfg or {}
        self.run_jobdir_fn = run_jobdir_fn

        self.utils = {
            'mkdtemp': self.mkdtemp,
            'mv_to_outputs': self.mv_to_outputs,
        }

    def run_jobdir(self):
        self.run_jobdir_fn(job_spec=self.job_spec, job=self.job, cfg=self.cfg,
                           utils=self.utils)

    def mkdtemp(self, **kwargs):
        """Generate tmp dir in scratch dir, per job_spec['scratch']

        If job_spec['scratch'] is empty, creates a dir in
        job_spec['dir'].

        Args:
            job_spec (dict): dict of submission metadata, including job
                and cfg.

        Returns:
            tmp_dir <str>: path to created dir.
        """
        if 'dir' not in kwargs:
            kwargs['dir'] = self.job_spec.get('scratch_dir') or \
                    tempfile.mkdtemp(prefix='MC_SCRATCH.',
                                     dir=self.job_spec['dir'])
        return tempfile.mkdtemp(**kwargs)

    def mv_to_outputs(self, src=None, outputs_key=None):
        """Move a path to the submission outputs dir.
        
        Args:
            src <str>: path of source to be moved.
            outputs_key <str>: relative path under outputs dir to use as move
                target.
        """
        outputs_dir = os.path.join(
            self.job_spec['dir'],
            self.job_spec.get('io_dir_names', {}).get('outputs', 'outputs')
        )
        outputs_dest = os.path.join(outputs_dir, outputs_key)
        shutil.move(src, outputs_dest)
